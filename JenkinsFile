pipeline {
  agent any;
stages {
    stage("GIT") {
      steps {
        sh 'git checkout master'
        sh 'git pull origin master'
      }
    }


    stage("MAVEN BUILD") {
      steps {
        sh 'mvn clean install -Dmaven.test.skip=true'
    }
    }

  /* stage("MOCKITO") {
          steps {
        sh "mvn test -Dtest=com.example.backend.services.BilanAnnuelServiceImpMock"
                    sh "mvn test -Dtest=com.example.backend.services.CandidatureServiceImplMock"
                    sh "mvn test -Dtest=com.example.backend.services.CertificatsServiceImpMock"
                    sh "mvn test -Dtest=com.example.backend.services.CollaborateurServiceImplMock"
                    sh "mvn test -Dtest=com.example.backend.services.CompetenceServiceImpMock"
                    sh "mvn test -Dtest=com.example.backend.services.EntretienRhServiceImplMock"
                    sh "mvn test -Dtest=com.example.backend.services.EntretienServiceImplMock"
                    sh "mvn test -Dtest=com.example.backend.services.EvaluationServiceImplMock"
                    sh "mvn test -Dtest=com.example.backend.services.FormateurServiceImplMock"
                    sh "mvn test -Dtest=com.example.backend.services.FormationServiceImplMock"
                    sh "mvn test -Dtest=com.example.backend.services.GroupServiceImplMock"
                    sh "mvn test -Dtest=com.example.backend.services.ManagerServiceImplMock"
                    sh "mvn test -Dtest=com.example.backend.services.PosteServiceImplMock"
                    sh "mvn test -Dtest=com.example.backend.services.QuestionServiceImplMock"
                    sh "mvn test -Dtest=com.example.backend.services.QuizzServiceImplMock"
                    sh "mvn test -Dtest=com.example.backend.services.SessionFormationImplMock"
                    sh "mvn test -Dtest=com.example.backend.services.UserServiceImplMock"

          }
        }

    stage("SONARQUBE") {
      steps {
       sh "mvn sonar:sonar -Dsonar.login=admin -Dsonar.password=azerty123"
      }
    }

stage('MVN NEXUS')
                  {
                  steps {

                  sh 'mvn  deploy -DskipTests  '

                  }}*/


 stage("BUILD DOCKER IMAGE") {
             steps {

               sh 'docker build -t khaznaji/stagepfe:latest .'

             }
           }/*
       stage('docker push'){
                        steps{
                              dir('gestion-station-ski') {
                            script{
                                sh 'docker login -u "khaznaji" -p "191JFT2725" docker.io'
                                sh 'docker push khaznaji/oumaymalynakhaznaji-5sae4-g1-gestion-station-ski:latest'
                                sh 'docker push khaznaji/test:latest'

                            }
                        }
                    }}

               stage('docker compose') {
                   steps{
                         dir('gestion-station-ski') {
                       sh 'docker compose down --rmi all'
                       sh 'docker compose up -d'
                   }}
               }*/


}}